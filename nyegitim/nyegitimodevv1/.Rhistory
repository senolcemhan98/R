#Normal dagilmadigi icin mann_whitney_u_testi
u_test_2 = wilcox.test(veri$Seviye.3.Sayi,veri$Seviye.4.Sayi,paired = FALSE)
print(u_test_2)
if(u_test_2$p.value<0.05) {
print( 'Seviye.3.Sayi ve Seviye.4.Sayi medyanlari ayni degildir.')
} else { print('Seviye.3.Sayi ve Seviye.4.Sayi medyanlari aynidir.')
}
#### Soru_4 Bitti ####
#Soru_5#
#5_1 Yillara gore Ogrenci Ortalamalari arasinda fark olup olmadigini inceleyiniz.Farkli olan yillari belirleyiniz.
#b.siz = Yil, bagimli = ogr ortalamasi
kw_test = kruskal.test(Ortalama.Puan~Yil,data=veri)
print(kw_test)
#data:  Ortalama.Puan by Yil
#Kruskal-Wallis chi-squared = 422.44, df = 2, p-value < 2.2e-16
#Gruplar arasinda anlamli farklar bulunmaktadir.
#Fark hangi gruplar arasinda bakalim(Dunn Testi)
library(FSA)
d_test = dunnTest(Ortalama.Puan~Yil,data=veri,method = 'bonferroni')
print(d_test)
# Comparison           Z      P.unadj        P.adj
#1 2013 - 2014 -18.0836943 4.283950e-73 1.285185e-72
#2 2013 - 2015 -17.5409379 6.976641e-69 2.092992e-68
#3 2014 - 2015   0.5780022 5.632626e-01 1.000000e+00
#2014-2015 aynidir, 2013-2014 ve 2013-2015 farklidir
#Bir de Nemenyi testi ile inceleyelim
library(DescTools)
bm_test = NemenyiTest(x=veri$Ortalama.Puan,g=veri$Yil,dist = 'tukey')
print(bm_test)
#  mean.rank.diff   pval
#  2014-2013      4719.9219 <2e-16 ***
#  2015-2013      4569.6819 <2e-16 ***
#  2015-2014      -150.2401 0.8319
#---
#  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
#Burasida dunn testini desteklemektedir.
#5_2
#okul turlerine gore ogrenci ortalamalari arasinda fark var mi arastirin.Farkli olani belirtin.
#b.siz = okul.tur, bagimli = ogr ortalamasi
kw_test2 = kruskal.test(Ortalama.Puan~Okul.Tur,data=veri)
print(kw_test2)
#data:  Ortalama.Puan by Yil
#Kruskal#-Wallis chi-squared = 422.44, df = 2, p-value < 2.2e-16
#Gruplar arasinda anlamli farklar bulunmaktadir.
#Fark hangi gruplar arasinda bakalim(Dunn Testi)
#Bir de Nemenyi testi ile inceleyelim
bm_test2 = NemenyiTest(veri$Ortalama.Puan~veri$Okul.Tur,dist = 'tukey')
print(bm_test2)
d_test2 = dunnTest(Ortalama.Puan~Okul.Tur,data=veri,method = 'bonferroni')
print(d_test2)
kw_test3 = kruskal.test(Ortalama.Puan~Sinif,data=veri)
print(kw_test3)
d_test3 = dunnTest(Ortalama.Puan~Sinif,data=veri,method = 'bonferroni')
print(d_test3)
bm_test3 = NemenyiTest(veri$Ortalama.Puan~veri$Sinif,dist = 'tukey')
print(bm_test3)
mn_test = manova(cbind(Seviye.1.Sayi,Seviye.1.Yuzde)~Yil,data=veri)
summary(mn_test)
summary(mn_test,test="Pillai")
#Detayli ciktisi icin
summary.aov(mn_test)
mn_test2 = manova(cbind(Seviye.2.Sayi,Seviye.2.Yuzde)~Okul.Tur,data=veri)
summary(mn_test2,test="Pillai")
#Detayli ciktisi icin
summary.aov(mn_test)
summary.aov(mn_test2)
mn_test3 = manova(cbind(Seviye.3.Sayi,Seviye.3.Yuzde)~Sinif,data=veri)
summary(mn_test3,test="Pillai")
summary.aov(mn_test3)
mn_test4 = manova(cbind(Seviye.4.Sayi,Seviye.4.Yuzde)~Okul.Tur,data=veri)
summary(mn_test2,test="Pillai")
mn_test4 = manova(cbind(Seviye.4.Sayi,Seviye.4.Yuzde)~Okul.Tur,data=veri)
summary(mn_test4,test="Pillai")
summary.aov(mn_test4)
library(psych)
tanimlayici_istatistik = describe(veri) #summary de kullanilabilir
print(tanimlayici_istatistik)
numeric_sutunlar <- sapply(veri, class)=="numeric"
integer_sutunlar <- sapply(veri, class)=="integer"
sayisal_sutunlar <- numeric_sutunlar | integer_sutunlar
sayisal_veri <- veri[,sayisal_sutunlar]
describeBy(sayisal_veri,group = sayisal_veri$Yil)
describeBy(sayisal_veri,group = veri$Sinif)
ot_sinif_capraz_tablo = table(veri$Okul.Tur,veri$Sinif)
print(ot_sinif_capraz_tablo)
siniff = factor(veri$Sinif)
t = table(siniff,veri$Okul.Tur)
barplot(t,col = c("red","white","green","blue","yellow","pink","orange"),beside = T,legend = rownames(t),)
library(dplyr)
library(ggplot2)
veri%>%
ggplot(aes(x=Okul.Tur,fill = Sinif))+geom_bar()
siniff = factor(veri$Sinif)
t = table(siniff,veri$Okul.Tur)
barplot(t,col = c("red","white","green","blue","yellow","pink","orange"),beside = T,legend = rownames(t),)
library(MASS)
ot_sinif_ilis_test = chisq.test(ot_sinif_capraz_tablo)
print(ot_sinif_ilis_test)
ot_yil_capraz_tablo = table(veri$Okul.Tur,veri$Yil)
print(ot_yil_capraz_tablo)
yill = factor(veri$Yil)
t = table(yill,veri$Okul.Tur)
barplot(t,col = c("red","green","blue"),beside = T,legend = rownames(t))
ot_yil_ilis_test = chisq.test(ot_sinif_capraz_tablo)
print(ot_yil_ilis_test)
ot_yil_ilis_test = chisq.test(ot_yil_capraz_tablo)
print(ot_yil_ilis_test)
sinif_yil_capraz_tablo = table(veri$Sinif,veri$Yil)
print(sinif_yil_capraz_tablo)
#Gorsellestirme 1
siniff = factor(veri$Sinif)
t = table(siniff,veri$Yil)
barplot(t,col = c("red","green","blue","yellow","pink","orange"),beside = T,legend = rownames(t))
sinif_yil_ilis_test = chisq.test(sinif_yil_capraz_tablo)
print(sinif_yil_ilis_test)
for(j in 1:ncol(soru3.veri)) {
degisken = soru3.veri[,j]
degisken.adi = keeps[j]
test <- lillie.test(degisken)
if(test$p.value<0.05) {
cat(degisken.adi,' dağılımı Normal Dağılım Değildir (p=',
test$p.value,")\n")
} else { cat(degisken.adi,' dağılımı Normal Dağılımdır (p=',
test$p.value,")\n")
}
}
library(nortest)
for(j in 1:ncol(soru3.veri)) {
degisken = soru3.veri[,j]
degisken.adi = keeps[j]
test <- lillie.test(degisken)
if(test$p.value<0.05) {
cat(degisken.adi,' dağılımı Normal Dağılım Değildir (p=',
test$p.value,")\n")
} else { cat(degisken.adi,' dağılımı Normal Dağılımdır (p=',
test$p.value,")\n")
}
}
mu0 = c(20,300,15,50,15,50,10,10,5,10)
for(j in 1:ncol(soru3.veri)) {
degisken = soru3.veri[,j]
degisken.adi = keeps[j]
test2 <- wilcox.test(degisken,mu=mu0[j],alternative = 't')
if(test2$p.value<0.05) {
cat(degisken.adi, 'Ortalamasi', mu0[j] , 'degildir\n')
} else { cat(degisken.adi, 'Ortalamasi', mu0[j] , 'dir\n')
}
cat(degisken.adi, 'na ait buyukluk incelemesi:\n')
test3 <- wilcox.test(degisken,mu=mu0[j],alternative = 'g')
if(test3$p.value<0.05) {
cat(degisken.adi, 'Ortalamasi' , mu0[j] , 'den buyuktur\n')
} else { cat(degisken.adi, 'Ortalamasi' , mu0[j] , 'den kucuktur\n')
}
}
test1.norm = lillie.test(veri$Seviye.1.Sayi)
test2.norm = lillie.test(veri$Seviye.2.Sayi)
if(test1.norm$p.value<0.05 || test2.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
u_test_1 = wilcox.test(veri$Seviye.1.Sayi,veri$Seviye.2.Sayi,paired = FALSE)
print(u_test_1)
if(u_test_1$p.value<0.05) {
print( 'Seviye.1.Sayi ve Seviye.2.Sayi medyanlari ayni degildir.')
} else { print('Seviye.1.Sayi ve Seviye.2.Sayi medyanlari aynidir.')
}
test3.norm = lillie.test(veri$Seviye.3.Sayi)
test4.norm = lillie.test(veri$Seviye.4.Sayi)
if(test3.norm$p.value<0.05 || test4.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
test3.norm = lillie.test(veri$Seviye.3.Sayi)
test4.norm = lillie.test(veri$Seviye.4.Sayi)
if(test3.norm$p.value<0.05 || test4.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
u_test_2 = wilcox.test(veri$Seviye.3.Sayi,veri$Seviye.4.Sayi,paired = FALSE)
print(u_test_2)
if(u_test_2$p.value<0.05) {
print( 'Seviye.3.Sayi ve Seviye.4.Sayi medyanlari ayni degildir.')
} else { print('Seviye.3.Sayi ve Seviye.4.Sayi medyanlari aynidir.')
}
print(u_test_1)
kw_test = kruskal.test(Ortalama.Puan~Yil,data=veri)
print(kw_test)
d_test = dunnTest(Ortalama.Puan~Yil,data=veri,method = 'bonferroni')
print(d_test)
d_test = dunnTest(Ortalama.Puan~Yil,data=veri,method = 'bonferroni')
print(d_test)
library(DescTools)
bm_test = NemenyiTest(x=veri$Ortalama.Puan,g=veri$Yil,dist = 'tukey')
print(bm_test)
kw_test2 = kruskal.test(Ortalama.Puan~Okul.Tur,data=veri)
print(kw_test2)
d_test2 = dunnTest(Ortalama.Puan~Okul.Tur,data=veri,method = 'bonferroni')
print(d_test2)
bm_test2 = NemenyiTest(veri$Ortalama.Puan~veri$Okul.Tur,dist = 'tukey')
print(bm_test2)
bm_test2 = NemenyiTest(veri$Ortalama.Puan~veri$Okul.Tur,dist = 'tukey')
print(bm_test2)
kw_test3 = kruskal.test(Ortalama.Puan~Sinif,data=veri)
print(kw_test3)
d_test3 = dunnTest(Ortalama.Puan~Sinif,data=veri,method = 'bonferroni')
print(d_test3)
bm_test3 = NemenyiTest(veri$Ortalama.Puan~veri$Sinif,dist = 'tukey')
print(bm_test3)
bm_test3 = NemenyiTest(veri$Ortalama.Puan~veri$Sinif,dist = 'tukey')
print(bm_test3)
mn_test = manova(cbind(Seviye.1.Sayi,Seviye.1.Yuzde)~Yil,data=veri)
summary(mn_test,test="Pillai")
summary.aov(mn_test)
mn_test2 = manova(cbind(Seviye.2.Sayi,Seviye.2.Yuzde)~Okul.Tur,data=veri)
summary(mn_test2,test="Pillai")
summary.aov(mn_test2)
n_test3 = manova(cbind(Seviye.3.Sayi,Seviye.3.Yuzde)~Sinif,data=veri)
summary(mn_test3,test="Pillai")
summary.aov(mn_test3)
mn_test4 = manova(cbind(Seviye.4.Sayi,Seviye.4.Yuzde)~Okul.Tur,data=veri)
summary(mn_test4,test="Pillai")
summary.aov(mn_test4)
veri = read.csv2('NewYork.csv')
#Soru_1#
#1_1# Tanımlayici istatistikler
library(psych)
tanimlayici_istatistik = describe(veri) #summary de kullanilabilir
print(tanimlayici_istatistik)
#1_2# Yillara gore sayisal degiskelerin tanimlayici istatistiklerinin bulun.
numeric_sutunlar <- sapply(veri, class)=="numeric"
integer_sutunlar <- sapply(veri, class)=="integer"
sayisal_sutunlar <- numeric_sutunlar | integer_sutunlar
sayisal_veri <- veri[,sayisal_sutunlar]
describeBy(sayisal_veri,group = sayisal_veri$Yil)
#1_3# Siniflara gore sayisal degiskenlerin tanimlayici istatistiklerini bulun.
describeBy(sayisal_veri,group = veri$Sinif)
#### Soru_1 Bitti ####
#Soru_2#
#2_1# Okul turu ile Sinif arasindaki capraz tabloyu olusturup arasında iliski var mi bakiniz.
ot_sinif_capraz_tablo = table(veri$Okul.Tur,veri$Sinif)
print(ot_sinif_capraz_tablo)
#Gorsellestirme 1
siniff = factor(veri$Sinif)
t = table(siniff,veri$Okul.Tur)
barplot(t,col = c("red","white","green","blue","yellow","pink","orange"),beside = T,legend = rownames(t),)
#Gorsellestirme 2
library(dplyr)
library(ggplot2)
veri%>%
ggplot(aes(x=Okul.Tur,fill = Sinif))+geom_bar()
# Iliskiyi incelemk icin Ki-Kare Testi yapalim
library(MASS)
ot_sinif_ilis_test = chisq.test(ot_sinif_capraz_tablo)
print(ot_sinif_ilis_test)
#2_2# Okul turu ile Yil arasindaki capraz tabloyu olusturup iliski var mi bakin.
ot_yil_capraz_tablo = table(veri$Okul.Tur,veri$Yil)
print(ot_yil_capraz_tablo)
#Gorsellestirme 1
yill = factor(veri$Yil)
t = table(yill,veri$Okul.Tur)
barplot(t,col = c("red","green","blue"),beside = T,legend = rownames(t))
#Gorsellestirme 2
veri%>%
ggplot(aes(x=Yil,fill=Okul.Tur))+geom_bar()
# Iliskiyi incelemk icin Ki-Kare Testi yapalim
ot_yil_ilis_test = chisq.test(ot_yil_capraz_tablo)
print(ot_yil_ilis_test)
#2_3# Sinif ile Yil arasindaki capraz tabloyu olusturup iliski varmi bakin.
sinif_yil_capraz_tablo = table(veri$Sinif,veri$Yil)
print(sinif_yil_capraz_tablo)
#Gorsellestirme 1
siniff = factor(veri$Sinif)
t = table(siniff,veri$Yil)
barplot(t,col = c("red","green","blue","yellow","pink","orange"),beside = T,legend = rownames(t))
#Gorsellestirme 2
veri%>%
ggplot(aes(x=Yil,fill = Sinif))+geom_bar()
# Iliskiyi incelemk icin Ki-Kare Testi yapalim
sinif_yil_ilis_test = chisq.test(sinif_yil_capraz_tablo)
print(sinif_yil_ilis_test)
#### Soru_2 Bitti ####
#Soru_3#
#Oncelikle veriler normal dagilima uygu mu diye bakalim.
keeps = c('OgrenciSayisi','Ortalama.Puan','Seviye.1.Sayi','Seviye.1.Yuzde','Seviye.2.Sayi','Seviye.2.Yuzde',
'Seviye.3.Sayi','Seviye.3.Yuzde','Seviye.4.Sayi','Seviye.4.Yuzde')
soru3.veri = veri[,keeps]
#Normallik inceleme
library(nortest)
for(j in 1:ncol(soru3.veri)) {
degisken = soru3.veri[,j]
degisken.adi = keeps[j]
test <- lillie.test(degisken)
if(test$p.value<0.05) {
cat(degisken.adi,' dağılımı Normal Dağılım Değildir (p=',
test$p.value,")\n")
} else { cat(degisken.adi,' dağılımı Normal Dağılımdır (p=',
test$p.value,")\n")
}
}
#Verilerimizin hicbiri normal dagilima uymamaktadir. Bu nedenle Wilcox testi uygulanacaktır
mu0 = c(20,300,15,50,15,50,10,10,5,10)
for(j in 1:ncol(soru3.veri)) {
degisken = soru3.veri[,j]
degisken.adi = keeps[j]
test2 <- wilcox.test(degisken,mu=mu0[j],alternative = 't')
if(test2$p.value<0.05) {
cat(degisken.adi, 'Ortalamasi', mu0[j] , 'degildir\n')
} else { cat(degisken.adi, 'Ortalamasi', mu0[j] , 'dir\n')
}
cat(degisken.adi, 'na ait buyukluk incelemesi:\n')
test3 <- wilcox.test(degisken,mu=mu0[j],alternative = 'g')
if(test3$p.value<0.05) {
cat(degisken.adi, 'Ortalamasi' , mu0[j] , 'den buyuktur\n')
} else { cat(degisken.adi, 'Ortalamasi' , mu0[j] , 'den kucuktur\n')
}
}
#### Soru_3 Bitti ####
#Soru_4#
#4_1
#1.seviye ogrenci sayilarinin - 2.seviye ogrenci sayilarina eşit olup olmadigini bulun. Gerekli ise buyukluk - kucukluk hakkinda
#bilgi veriniz
test1.norm = lillie.test(veri$Seviye.1.Sayi)
test2.norm = lillie.test(veri$Seviye.2.Sayi)
if(test1.norm$p.value<0.05 || test2.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
#Normal dagilmadigi icin mann_whitney_u_testi
u_test_1 = wilcox.test(veri$Seviye.1.Sayi,veri$Seviye.2.Sayi,paired = FALSE)
print(u_test_1)
if(u_test_1$p.value<0.05) {
print( 'Seviye.1.Sayi ve Seviye.2.Sayi medyanlari ayni degildir.')
} else { print('Seviye.1.Sayi ve Seviye.2.Sayi medyanlari aynidir.')
}
#4_2
#3.seviye ogrenci sayilarinin - 2.seviye ogrenci sayilarina esit olup olmadigini bulun. Gerekli ise buyukluk - kucukluk hakkinda
#bilgi veriniz
test3.norm = lillie.test(veri$Seviye.3.Sayi)
test4.norm = lillie.test(veri$Seviye.4.Sayi)
if(test3.norm$p.value<0.05 || test4.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
#Normal dagilmadigi icin mann_whitney_u_testi
u_test_2 = wilcox.test(veri$Seviye.3.Sayi,veri$Seviye.4.Sayi,paired = FALSE)
print(u_test_2)
if(u_test_2$p.value<0.05) {
print( 'Seviye.3.Sayi ve Seviye.4.Sayi medyanlari ayni degildir.')
} else { print('Seviye.3.Sayi ve Seviye.4.Sayi medyanlari aynidir.')
}
#### Soru_4 Bitti ####
#Soru_5#
#5_1 Yillara gore Ogrenci Ortalamalari arasinda fark olup olmadigini inceleyiniz.Farkli olan yillari belirleyiniz.
#b.siz = Yil, bagimli = ogr ortalamasi
kw_test = kruskal.test(Ortalama.Puan~Yil,data=veri)
print(kw_test)
#data:  Ortalama.Puan by Yil
#Kruskal-Wallis chi-squared = 422.44, df = 2, p-value < 2.2e-16
#Gruplar arasinda anlamli farklar bulunmaktadir.
#Fark hangi gruplar arasinda bakalim(Dunn Testi)
library(FSA)
d_test = dunnTest(Ortalama.Puan~Yil,data=veri,method = 'bonferroni')
print(d_test)
# Comparison           Z      P.unadj        P.adj
#1 2013 - 2014 -18.0836943 4.283950e-73 1.285185e-72
#2 2013 - 2015 -17.5409379 6.976641e-69 2.092992e-68
#3 2014 - 2015   0.5780022 5.632626e-01 1.000000e+00
#2014-2015 aynidir, 2013-2014 ve 2013-2015 farklidir
#Bir de Nemenyi testi ile inceleyelim
library(DescTools)
bm_test = NemenyiTest(x=veri$Ortalama.Puan,g=veri$Yil,dist = 'tukey')
print(bm_test)
#  mean.rank.diff   pval
#  2014-2013      4719.9219 <2e-16 ***
#  2015-2013      4569.6819 <2e-16 ***
#  2015-2014      -150.2401 0.8319
#---
#  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
#Burasida dunn testini desteklemektedir.
#5_2
#okul turlerine gore ogrenci ortalamalari arasinda fark var mi arastirin.Farkli olani belirtin.
#b.siz = okul.tur, bagimli = ogr ortalamasi
kw_test2 = kruskal.test(Ortalama.Puan~Okul.Tur,data=veri)
print(kw_test2)
#data:  Ortalama.Puan by Yil
#Kruskal#-Wallis chi-squared = 422.44, df = 2, p-value < 2.2e-16
#Gruplar arasinda anlamli farklar bulunmaktadir.
#Fark hangi gruplar arasinda bakalim(Dunn Testi)
d_test2 = dunnTest(Ortalama.Puan~Okul.Tur,data=veri,method = 'bonferroni')
print(d_test2)
#Bir de Nemenyi testi ile inceleyelim
bm_test2 = NemenyiTest(veri$Ortalama.Puan~veri$Okul.Tur,dist = 'tukey')
print(bm_test2)
#5_3
#siniflara gore ogrenci ortalamalari
#b.siz=sinif bagimli=ogr ortalamasi
kw_test3 = kruskal.test(Ortalama.Puan~Sinif,data=veri)
print(kw_test3)
#data:  Ortalama.Puan by Sinif
#Kruskal-Wallis chi-squared = 2627.8, df = 6, p-value < 2.2e-16
#Gruplar arasinda anlamli farklar bulunmaktadir.
#Fark hangi gruplar arasinda bakalim(Dunn Testi)
d_test3 = dunnTest(Ortalama.Puan~Sinif,data=veri,method = 'bonferroni')
print(d_test3)
#Bir de Nemenyi testi ile inceleyelim
bm_test3 = NemenyiTest(veri$Ortalama.Puan~veri$Sinif,dist = 'tukey')
print(bm_test3)
#5_4
#Yillara gore Seviye.1.Sayi,Seviye.1.yuzde farklari incele farkli olabi belirt.
#b.siz=yil  bagimli=Seviye.1.Sayi,Seviye.1.Yuzde
#1 bagimsiz birdenfazla bagimli degisken var. Tek yonlu MANOVA kullanilacaktir.
#NOT:Gruplar arasi normallik icin kullanilan mardiaTesti kutuphanesi (MVN) inaktif oldugu icin test yapilamamistir.
#    Kalan sorular gruplar arasi normallik varsayimi kabul edilerek cevaplanmistir.
mn_test = manova(cbind(Seviye.1.Sayi,Seviye.1.Yuzde)~Yil,data=veri)
summary(mn_test,test="Pillai")
#               Df    Pillai approx F num Df den Df    Pr(>F)
#Yil            1 0.0033487      228      2 135717 < 2.2e-16 ***
#  Residuals 135718
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Detayli ciktisi icin
summary.aov(mn_test)
#Response Seviye.1.Sayi :
#                  Df    Sum Sq Mean Sq F value    Pr(>F)
#Yil              1    473131  473131  273.68 < 2.2e-16 ***
#  Residuals   135718 234629744    1729
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Response Seviye.1.Yuzde :
#                 Df   Sum Sq Mean Sq F value    Pr(>F)
#Yil              1   178644  178644  293.69 < 2.2e-16 ***
#  Residuals   135718 82552591     608
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#5_5
#Okul.Tur'e gore Seviye.2.Sayi,Seviye.2.yuzde farklari incele farkli olabi belirt.
#b.siz=Okul.Tur  bagimli=Seviye.2.Sayi,Seviye.2.Yuzde
mn_test2 = manova(cbind(Seviye.2.Sayi,Seviye.2.Yuzde)~Okul.Tur,data=veri)
summary(mn_test2,test="Pillai")
#Test parametresi yerine kullanilabilecekler["Pillai","Wilks","Hotelling-Lowley","Roy"]
#              Df  Pillai approx F num Df den Df    Pr(>F)
#Okul.Tur      11 0.19345   1321.1     22 271416 < 2.2e-16 ***
#  Residuals 135708
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Detayli ciktisi icin
summary.aov(mn_test2)
#Response Seviye.2.Sayi :
#                Df    Sum Sq Mean Sq F value    Pr(>F)
#Okul.Tur        11  31940553 2903687  1758.1 < 2.2e-16 ***
#  Residuals   135708 224134508    1652
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Response Seviye.2.Yuzde :
#                Df   Sum Sq Mean Sq F value    Pr(>F)
#Okul.Tur        11  1873728  170339  1049.7 < 2.2e-16 ***
#  Residuals   135708 22021681     162
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#5_6
#Siniflara gore Seviye.3.Sayi ve Seviye.3Yuzde farklarini incele farkli olani belirt.
#b.siz=sinif    bagimli=Seviye.3.Sayi,Seviye.3,Yuzde
mn_test3 = manova(cbind(Seviye.3.Sayi,Seviye.3.Yuzde)~Sinif,data=veri)
summary(mn_test3,test="Pillai")
#.              Df  Pillai approx F num Df den Df    Pr(>F)
#Sinif          6 0.15553   1907.3     12 271426 < 2.2e-16 ***
#  Residuals 135713
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
summary.aov(mn_test3)
#                 Df    Sum Sq Mean Sq F value    Pr(>F)
#Sinif            6  12465968 2077661  2467.8 < 2.2e-16 ***
#  Residuals   135713 114257373     842
#---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Response Seviye.3.Yuzde :
#                 Df   Sum Sq Mean Sq F value    Pr(>F)
#Sinif            6   848884  141481  873.48 < 2.2e-16 ***
#  Residuals   135713 21981952     162
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#5_7
#Okul.Tur'e gore Seviye.4.Sayi,Seviye.4.yuzde farklari incele farkli olabi belirt.
#b.siz=Okul.Tur  bagimli=Seviye.4.Sayi,Seviye.4.Yuzde
mn_test4 = manova(cbind(Seviye.4.Sayi,Seviye.4.Yuzde)~Okul.Tur,data=veri)
summary(mn_test4,test="Pillai")
#              Df  Pillai approx F num Df den Df    Pr(>F)
#Okul.Tur      11 0.24999   1762.3     22 271416 < 2.2e-16 ***
#  Residuals 135708
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
summary.aov(mn_test4)
#Response Seviye.4.Sayi :
#  Df    Sum Sq Mean Sq F value    Pr(>F)
#Okul.Tur        11  10122002  920182  1033.6 < 2.2e-16 ***
#  Residuals   135708 120819877     890
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Response Seviye.4.Yuzde :
#  Df   Sum Sq Mean Sq F value    Pr(>F)
#Okul.Tur        11  6285782  571435    2932 < 2.2e-16 ***
#  Residuals   135708 26448822     195
#---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#### Soru_5 Bitti ####
View(veri)
test1.norm = lillie.test(veri$Seviye.1.Sayi)
test2.norm = lillie.test(veri$Seviye.2.Sayi)
if(test1.norm$p.value<0.05 || test2.norm$p.value<0.05) {
print("Degiskenler normal dagilmamaktadir dolayisiyla t-testi uygulanamaz.")
} else { print("Degiskenler normal dagilmaktadir dolayisiyla t-testi uygulanabilir.")
}
